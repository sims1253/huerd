% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/animation.R
\name{animate_repulsion}
\alias{animate_repulsion}
\title{Animate Color Repulsion Process}
\usage{
animate_repulsion(
  states,
  n_colors,
  base_colors = NULL,
  filename = "repulsion.gif",
  show_force_field = FALSE
)
}
\arguments{
\item{n_colors}{Number of colors to generate in the palette}

\item{base_colors}{Optional vector of base colors in hex format
(e.g. "#FF0000") that will remain fixed during
animation}

\item{filename}{Output GIF filename}

\item{show_force_field}{Whether to visualize the repulsion force field}

\item{max_iterations}{Maximum number of iterations for the repulsion
simulation}

\item{learning_rate}{Controls magnitude of color movements per iteration}

\item{save_every}{Save state every n iterations for animation frames}

\item{boundary_force}{Strength of containment force keeping colors within
valid RGB bounds}
}
\value{
Creates an animated GIF showing the color optimization process
}
\description{
Creates an animated visualization of how colors repel each other in LAB color
space to generate a perceptually distinct color palette.
}
\examples{
# Generate animation for 8 colors
animate_repulsion(8)

# Generate animation with fixed base colors
states <- sqrt_repulsion(n_colors,
  max_iterations = max_iterations,
  base_colors = base_colors,
  save_every = save_every,
  color_force_factor = color_force_factor,
  boundary_force_factor = boundary_force_factor,
  center_force_factor = center_force_factor,
  return_states = TRUE,
  convergence_threshold = convergence_threshold,
  min_iterations = min_iterations
)
animate_repulsion(states, 8, base_colors = c("#E69F00", "#0072B2"))
}
